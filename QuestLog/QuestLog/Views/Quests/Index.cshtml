@model IEnumerable<QuestLog.Models.Quest>

@{
    ViewBag.Title = "Index";
    int experienceTotal = 0;
    foreach (var item in Model)
    {
        experienceTotal = item.ExperiencePoints + experienceTotal;
    }
    int levelTotal = 0;
    foreach (var item in Model)
    {
        levelTotal = experienceTotal/20;
    }
    int mainAlignment = 0;
    foreach (var item in Model)
    {
        if (item.Alignment == QuestLog.Models.Quest.AlignmentSide.Evil)
        {
            mainAlignment -= 1;
        }
        else if (item.Alignment == QuestLog.Models.Quest.AlignmentSide.Good)
        {
            mainAlignment += 1;
        }

    }
    string typeAlignment = "";
    if (mainAlignment > 0)
    {
        typeAlignment = "Good";
    } else if (mainAlignment == 0)
    {
        typeAlignment = "Neutral";
    } else if (mainAlignment < 0)
    {
        typeAlignment = "Evil";
    }
    }

<header class="jumbotron hero-spacer">
    <h1>Player Level @levelTotal</h1>
    <p>Total Experience: @experienceTotal</p>
    <p>Alignment: @typeAlignment</p>
</header>


<p>
    @Html.ActionLink("Log New Quest", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Level)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Alignment)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Reward)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ExperiencePoints)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Level)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Alignment)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Reward)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ExperiencePoints)
        </td>
        <td>
            <div class="pull-right">
                <a href="@Url.Action("Edit", new { id = item.QuestID })" class="btn btn-warning btn-sm margin-right">
                    <span class="glyphicon glyphicon-edit"></span><span class="hidden-xs"> Edit</span>
                </a>
                <a href="@Url.Action("Details", new { id = item.QuestID })" class="btn btn-info btn-sm margin-right">
                    <span class="glyphicon glyphicon-bookmark"></span><span class="hidden-xs"> Details</span>
                </a>
                <a href="@Url.Action("Delete", new { id = item.QuestID })" class="btn btn-danger btn-sm">
                    <span class="glyphicon glyphicon-trash"></span><span class="hidden-xs"> Delete</span>
                </a>
            </div>
        </td>
    </tr>
}

</table>
